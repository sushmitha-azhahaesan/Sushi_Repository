Given an integer array nums and an integer k, 
return true if there are two distinct indices i and j in the array such that nums[i] == nums[j] and abs(i - j) <= k.


Example 1:

Input: nums = [1,2,3,1], k = 3
Output: true
Example 2:

Input: nums = [1,0,1,1], k = 1
Output: true
Example 3:

Input: nums = [1,2,3,1,2,3], k = 2
Output: false


===================================================
class Solution:
    def containsNearbyDuplicate(self, nums: List[int], k: int) -> bool:
        #creating empty dictionary
        hm={}
        
        for index,value in enumerate(nums):
            # check for the values and index range if present return true else add it
            if ((value in hm) and (abs(index-hm[value])<=k)):
                    return True
    
            hm[value]=index               

        print(hm)    
        return False    

============================================================================

class Solution:
    def containsNearbyDuplicate(self, nums: list[int], k: int) -> bool:

        d = defaultdict(int)                                # d keeps track of most recent index of num (if seen)

                                                            #  Ex:  nums = [1,2,3,1,6,0,2],  k = 5
                                                            #                               num in d and
        for i, num in enumerate(nums):                      #   i   num         d             i - j <= 5
                                                            #  –––  ––– –––––––––––––––––– ––––––––––––––––– 
            if num in d and i - d[num] <= k: return True    #   0    1   {}                     False
                                                            #   1    2   {1: 0}                 False
            d[num] = i                                      #   2    3   {1: 0, 2: 1})          False
                                                            #   3    1   {1: 0, 2: 1, 3: 2}     True    <= 3 - 0 <5
        return False                                        #   |            |                             |   |
